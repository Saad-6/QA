<div id="faq-widget">
@model FAQRetailViewModel
    @{
        Layout = "~/Plugins/F.A.Q/Views/Shared/_RetailLayout.cshtml";

        string view = "_FAQWidget";
    }

<link rel="stylesheet" href="~/Plugins/F.A.Q/Content/admin.css" />

<div class="flex justify-content-between align-center p10 mb-3" id = "ask-question-div" >
   
    <div id="faq-heading cursor-pointer" >
            @if (Model.PaginatedList.Items != null && Model.PaginatedList.Items.Any())
            {    
               <h3> @T("Plugins.F.A.Q.Questions_About_This_Product")  </h3>
            }
            else
            {
                <h4> @T("Plugins.F.A.Q.Be_First_To_Ask") </h4>
            }
    </div>
    @if (Model.CurrentSettings.AllowAnoymourUsers || (!Model.CurrentSettings.AllowAnoymourUsers && Model.CurrentSettings.UserLoggedIn))
    {
            <button id="openModalButton" class="custom-modal-button btn btn-dark btn-sm"> @T("Plugins.F.A.Q.Ask_a_Question") </button>
        
    }
    @if(!Model.CurrentSettings.AllowAnoymourUsers && !Model.CurrentSettings.UserLoggedIn)
    {
            <a href="@Url.Action("Login","Customer")">@T("Plugins.F.A.Q.Login_To_Ask_A_Question")</a>
    }
</div>

<div class="content" id="faq-content">
        
            @foreach (var faq in Model.PaginatedList.Items)
            {
                    <div class="faq-container">

                    <div class="question-container">
                        <div class="d-flex">
                            <h5 class="mr-5">Q:</h5>
                            <b class="QnAs">
                                @faq.Question
                            </b>
                        </div>
                        <div  class="d-flex justify-content-between askedAndAnsweredBy">
                            <small class="small"><i>@T("Plugins.F.A.Q.Asked_By") : @faq.AskedBy </i> </small>
                            <small class="small">@faq.AskedTime</small>
                        </div>
                    </div>
                    <div class="answer-container">
                        <div class="d-flex">
                        <h5 class="mr-5">A:</h5> <p class="QnAs">@faq.Answer</p>
                        </div>
                        <div class="d-flex justify-content-between askedAndAnsweredBy">
                            <small class="small"> <i> @T("Plugins.F.A.Q.Answered_By") : @faq.AnsweredBy </i> </small>
                        </div>
                    </div>
                </div>
                <hr /> 
            }
            <!-- Pagination -->
            @if (Model.PaginatedList.ShowPages)
            {
                <nav>
                    <ul class="pagination justify-content-center">
                        @if (Model.PaginatedList.HasPreviousPage)
                        {
                            <li class="page-item">
                                <a class="page-link" href="#" data-page="@(Model.PaginatedList.PageIndex - 1)" data-view="@view">Previous</a>
                            </li>
                        }
                        @for (int i = 1; i <= Model.PaginatedList.TotalPages; i++)
                        {
                            <li class="page-item @(Model.PaginatedList.PageIndex == i ? "active" : "")">
                                <a class="page-link" href="#" data-page="@i" data-view="@view">@i</a>
                            </li>
                        }
                        @if (Model.PaginatedList.HasNextPage)
                        {
                            <li class="page-item">
                                <a class="page-link" href="#" data-page="@(Model.PaginatedList.PageIndex + 1)" data-view="@view">Next</a>
                            </li>
                        }
                    </ul>
                </nav>
            }
   
</div>
   <!--Custom Modal-->
    <div class="custom-modal-backdrop" id="customModalBackdrop"></div>
    <div class="custom-modal" id="askQuestionModal">
        <div class="custom-modal-header">
            <h5 class="custom-modal-title" id="askQuestionModalLabel">@T("Plugins.F.A.Q.Ask_A_Question")</h5>
            <button type="button" class="custom-modal-close" id="closeModalButton">&times;</button>
        </div>
        <div class="custom-modal-body">
            <input type="hidden" name="productId" id="productId" value="@Model.CurrentSettings.ProductId" />
            <input type="hidden" name="productName" id="productName" value="@ViewBag.ProductName" />
            <span class="text-danger" id="validation"></span>
            <textarea maxlength="255" class="form-control" rows="5" name="question" id="question" placeholder=@T("Plugins.F.A.Q.Question")></textarea>
        </div>
        <div class="custom-modal-footer flex justify-space-center align-center">
            <button type="button" id="submitQuestionButton" class="custom-modal-button">@T("Plugins.F.A.Q.Ask")</button>
        </div>
    </div>

<div id="successMessage"  class="success-message">
    <h4> @T("Plugins.F.A.Q.Success_Message") </h4>
    </div>

</div>

<script asp-location="Footer">
    $(document).ready(function () {
        // Find the container div that has a child div with id "faq-widget"
        var containerDiv = $(".container").filter(function () {
            return $(this).children("#faq-widget").length > 0;
        });

        // Change the class of the container div to "product-essentials"
        containerDiv.addClass("product-essentials").removeClass("container");
    });

    document.addEventListener("DOMContentLoaded", function () {

        console.log("Entered DOMContent function");

        function openModal() {
            document.getElementById('customModalBackdrop').style.display = 'block';
            document.getElementById('askQuestionModal').style.display = 'block';
        }

        function hideModal() {
            document.getElementById('customModalBackdrop').style.display = 'none';
            document.getElementById('askQuestionModal').style.display = 'none';
        }
        function removeValidation(){
            document.getElementById('validation').innerHTML = '';
        }
        $(document).on('click', '#openModalButton', function () {
            openModal();
        });
        $(document).on('click', '#closeModalButton', function () {
            hideModal();
        });
        $(document).on('click', '#customModalBackdrop', function () {
            hideModal();
        });
        $(document).on('click', '#submitQuestionButton', function () {
            submitQuestion();
        });
        $(document).on('input', '#question', function () {
            removeValidation();
        });
        // Handle question submission
            function submitQuestion() {
                const question = document.getElementById('question').value;
                const productId = @Model.CurrentSettings.ProductId;
                const productName = document.getElementById('productName').value;

                if (!question.trim()) {
                document.getElementById('validation').innerHTML = "Question cannot be empty";
                    return;
                }
                $.ajax({
                    type: 'POST',
                    url: '/Retail/AddQuestion',
                    data: {
                        question: question,
                        productId: productId,
                        productName: productName
                    },
                    success: function (response) {
                        handleSuccess();
                    },
                    error: function (error) {
                        handleFailure();
                    }
                });
            }
            // AJAX pagination function
            $(document).on('click', '.page-link', function (e) {
                e.preventDefault();
                console.log("Paging event triggered function");
                var page = $(this).data('page');
                $.ajax({
                    url: '@Url.Action("FAQWidget", "Retail")',
                    type: 'POST',
                    data: {
                        productId: @Model.CurrentSettings.ProductId,
                        page: page,
                        size: 5
                    },
                    success: function (response) {
                       
                        $('#faq-widget').html(response);
                    },
                    error: function (xhr, status, error) {
                        console.error("AJAX error: " + status + ' - ' + error);
                    }
                });
            });
            // Success handler
            function handleSuccess() {
                document.getElementById('question').value = '';
                hideModal();
                const successMessage = document.getElementById('successMessage');
                successMessage.style.display = 'block';
                successMessage.scrollIntoView({ behavior: 'smooth', block: 'start' });
                setTimeout(function () {
                    successMessage.style.display = 'none';
                }, 10000);
            }
            // Failure handler
            function handleFailure() {
                alert('Failed to submit the question.');
            }
    });

</script>
